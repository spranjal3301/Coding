{
	"tldrawFileFormatVersion": 1,
	"schema": {
		"schemaVersion": 2,
		"sequences": {
			"com.tldraw.store": 4,
			"com.tldraw.asset": 1,
			"com.tldraw.camera": 1,
			"com.tldraw.document": 2,
			"com.tldraw.instance": 25,
			"com.tldraw.instance_page_state": 5,
			"com.tldraw.page": 1,
			"com.tldraw.instance_presence": 5,
			"com.tldraw.pointer": 1,
			"com.tldraw.shape": 4,
			"com.tldraw.asset.bookmark": 2,
			"com.tldraw.asset.image": 5,
			"com.tldraw.asset.video": 5,
			"com.tldraw.shape.group": 0,
			"com.tldraw.shape.text": 2,
			"com.tldraw.shape.bookmark": 2,
			"com.tldraw.shape.draw": 2,
			"com.tldraw.shape.geo": 9,
			"com.tldraw.shape.note": 8,
			"com.tldraw.shape.line": 5,
			"com.tldraw.shape.frame": 0,
			"com.tldraw.shape.arrow": 5,
			"com.tldraw.shape.highlight": 1,
			"com.tldraw.shape.embed": 4,
			"com.tldraw.shape.image": 4,
			"com.tldraw.shape.video": 2,
			"com.tldraw.binding.arrow": 0
		}
	},
	"records": [
		{
			"gridSize": 10,
			"name": "",
			"meta": {},
			"id": "document:document",
			"typeName": "document"
		},
		{
			"meta": {},
			"id": "page:page",
			"name": "Page 1",
			"index": "a1",
			"typeName": "page"
		},
		{
			"x": 222.83171913213573,
			"y": -132.354352071018,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:wV4DkDUGFR5rgLBRCF4hI",
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 698.0477485528145,
				"text": "\n\n1. Socket.IO Implementation\n\nUnderstanding WebSockets.\nEvent-driven architecture and its use cases.\nSetting up a WebSocket server using Socket.IO.\nImplementing real-time features like chat systems, notifications, or collaborative tools.\nHandling reconnections and fallback mechanisms.\nOptimizing performance for real-time data transmission.\nSecurity considerations: preventing unauthorized connections.\n\n2. GraphQL\n\nUnderstanding the GraphQL schema: types, queries, mutations, and subscriptions.\nGraphQL vs REST: pros and cons.\nSetting up a GraphQL API server using Apollo Server or Express-GraphQL.\nWriting queries and mutations for efficient data fetching.\nIntegrating GraphQL APIs into a frontend application.\nHandling authentication and authorization with GraphQL.\nCaching mechanisms with Apollo Client.\nSchema stitching and federated GraphQL.\n3. Static Site Generation (SSG)\n\nDifference between SSR, SSG, and CSR (Client-Side Rendering).\nBenefits of SSG for performance and SEO.\nUsing frameworks like Next.js or Gatsby.js for SSG.\nSetting up routing and dynamic/static content.\nDeploying SSG projects using platforms like Netlify or Vercel.\nHandling large datasets with incremental static regeneration (ISR).\nIntegrating APIs or headless CMS (e.g., Contentful, Sanity).\n\n4. State Management\n\nUnderstanding the difference between local state and global state.\nWhen and why to use state management libraries.\nImplementing Redux, Zustand, or Recoil for managing application state.\nHandling complex states with middleware like Redux-Saga or Redux-Thunk.\nDebugging state using tools like Redux DevTools.\nOptimizing state updates for performance.\nManaging state in server-side rendering environments.\nUsing Context API effectively without over-rendering components.\n\n5. Progressive Web Apps (PWA)\n\nRole of service workers, manifests, and caching strategies.\nCreating a basic PWA with offline functionality.\nImplementing push notifications and background sync.\nAuditing and optimizing PWAs using Lighthouse.\nAdvanced caching strategies like stale-while-revalidate.\nUsing Workbox for service worker automation.\nConverting PWAs into installable apps for mobile and desktop.\n\n6. Real-Time Data Visualization\n\nUnderstanding data visualization principles (clarity, accuracy, and aesthetics).\nWorking with SVGs, Canvas, and WebGL for rendering.\nCreating responsive and interactive charts using D3.js or Chart.js.\nIntegrating live data streams into charts.\nImplementing zoom, pan, and other interactive features.\nOptimizing performance for large datasets.\nCreating 3D visualizations with Three.js or WebGL.\nApplying real-time data visualization in dashboards.\n\n7. Containerization\n\nUnderstanding containerization and virtualization.\nBasics of Docker architecture: images, containers, volumes, and networks.\nBuilding Docker images for frontend applications.\nWriting Docker files and using Docker Compose for multi-container setups.\nDeploying containers on cloud platforms like AWS, Azure, or GCP.\nOptimizing Docker images for faster builds.\nDebugging issues in containers using Docker CLI.\nUnderstanding Kubernetes basics for container orchestration.\n\n8 .Learn what is Reverse Engineering.\n\nLearn the basics\nUnderstand the risks\n\n9 . Basics of Obfuscation\n\nWe will soon introduce you to commercial-grade solutions for advanced obfuscation,\nwhich will be utilized in our projects. Hands-on sessions will be conducted to give you \npractical experience with these tools.",
				"font": "draw",
				"textAlign": "start",
				"autoSize": true,
				"scale": 0.6398018071541773
			},
			"parentId": "page:page",
			"index": "a1",
			"typeName": "shape"
		},
		{
			"id": "pointer:pointer",
			"typeName": "pointer",
			"x": 544.8607320901525,
			"y": -61.180840378837246,
			"lastActivityTimestamp": 1734333453381,
			"meta": {}
		},
		{
			"followingUserId": null,
			"opacityForNextShape": 1,
			"stylesForNextShape": {
				"tldraw:color": "light-blue",
				"tldraw:size": "m"
			},
			"brush": null,
			"scribbles": [],
			"cursor": {
				"type": "default",
				"rotation": 0
			},
			"isFocusMode": false,
			"exportBackground": true,
			"isDebugMode": false,
			"isToolLocked": false,
			"screenBounds": {
				"x": 0,
				"y": 0,
				"w": 1261.5999755859375,
				"h": 697.6000366210938
			},
			"insets": [
				false,
				false,
				true,
				false
			],
			"zoomBrush": null,
			"isGridMode": false,
			"isPenMode": false,
			"chatMessage": "",
			"isChatting": false,
			"highlightedUserIds": [],
			"isFocused": true,
			"devicePixelRatio": 1.25,
			"isCoarsePointer": false,
			"isHoveringCanvas": true,
			"openMenus": [],
			"isChangingStyle": false,
			"isReadonly": false,
			"meta": {},
			"duplicateProps": null,
			"id": "instance:instance",
			"currentPageId": "page:page",
			"typeName": "instance"
		},
		{
			"editingShapeId": null,
			"croppingShapeId": null,
			"selectedShapeIds": [
				"shape:wV4DkDUGFR5rgLBRCF4hI"
			],
			"hoveredShapeId": "shape:wV4DkDUGFR5rgLBRCF4hI",
			"erasingShapeIds": [],
			"hintingShapeIds": [],
			"focusedGroupId": null,
			"meta": {},
			"id": "instance_page_state:page:page",
			"pageId": "page:page",
			"typeName": "instance_page_state"
		},
		{
			"x": -94.87233003074437,
			"y": 225.58855685412004,
			"z": 1.3831468134858558,
			"meta": {},
			"id": "camera:page:page",
			"typeName": "camera"
		}
	]
}